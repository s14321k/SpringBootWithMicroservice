server.port=8084
spring.application.name=flight-checkin

server.servlet.context-path=/flightCheckinApp

com.flightCheckin.flightReservation.url = http://localhost:8083/SarathFlight


#eureka.client.service-url.defaultZone = http://localhost:8761/eureka
#eureka.client.service-url.defaultZone = http://localhost:8080


######################################################
#													 #
#					resilience4j					 #
#													 #
######################################################

# To check the current state of the switch
# Shows Three states
	# closed - UP
	# open - DOWN
	# half-open - UNKNOWN

# check how many last calls failed. Based on that desitions are taken. open, close or half-open
#resilience4j.circuitbreaker.instances.flightReservationService.sliding-window-size=10
# if failure rate is greater or equal to threshold then make the switch open. Values are considered in percentage
#resilience4j.circuitbreaker.instances.flightReservationService.failure-rate-threshold=50
# if switch is open, then how many seconds it has to wait?
#resilience4j.circuitbreaker.instances.flightReservationService.wait-duration-in-open-state=30000
# automaticaly goes to half open after the given time by giving true
#resilience4j.circuitbreaker.instances.flightReservationService.automatic-transition-from-open-to-half-open-enabled=true
# Permited number of call when half open
#resilience4j.circuitbreaker.instances.flightReservationService.permitted-number-of-calls-in-half-open-state=5

# check the current state of the switch, we need actuator
#resilience4j.circuitbreaker.instances.flightReservationService.allow-health-indicator-to-fail=true
# to configure actuator allong with resilience4j
#resilience4j.circuitbreaker.instances.flightReservationService.register-health-indicator=true

# Actuator URL - http://localhost:8084/flightCheckinApp/actuator/health

# these are the config for actuator
#management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=health
#management.endpoint.health.show-details=always

# resilience props

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

resilience4j.circuitbreaker.instances.flightReservationService.register-health-indicator=true
resilience4j.circuitbreaker.instances.flightReservationService.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.flightReservationService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.flightReservationService.minimum-number-of-calls=3
resilience4j.circuitbreaker.instances.flightReservationService.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.flightReservationService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.flightReservationService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.flightReservationService.sliding-window-size=10
resilience4j.circuitbreaker.instances.flightReservationService.sliding-window-type=count-based



