#Assign Port
server.port=8083
spring.application.name=flight-reservation

#Database connection
spring.datasource.url=jdbc:mysql://localhost:3306/reservation
spring.datasource.username=sarath69kumar
spring.datasource.password=sarath69kumar

spring.jpa.show-sql=true

#  https://stackoverflow.com/q/36605104/11962586
# Stops auto deletion of inserted values in database
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.data.jpa.repositories.enabled=true

spring.jpa.generate-ddl=true

# DB Auto Run sql queries
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath*:/WEB-INF/db/*.sql


# For jsp view
spring.mvc.view.prefix=/WEB-INF/jsps/registerAndLogin
spring.mvc.view.suffix=.jsp

# server.servlet.register-default-servlet=true

server.servlet.context-path=/SarathFlight

#spring.jpa.database-platform=

# To use two database connection
# https://stackoverflow.com/q/30337582/11962586

# Mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=spring69boot@gmail.com
spring.mail.password=hpnotlmksfewkblz
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true

# Declaring constants for mail
com.sarath.flightreservation.subject = Itenary for your flight
com.sarath.flightreservation.body = Iternary file details are provided inside the pdf

# In console we will only see the error logs and no more logs can be seen. Created xml config for log
#logging.level.root=ERROR
#logging.level.root=INFO
#logging.file.name = Logs/flightReservation.log


#eureka.client.service-url.defaultZone = http://localhost:8761/eureka